(()=>{function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".offices__regions"),t=document.querySelector(".offices__desktop-regions.shadow");e&&t&&(t.innerHTML=e.innerHTML)})),document.addEventListener("click",(function(t){var n;["offices__toggle","offices__region","direction"].some((function(e){return t.target.matches(".".concat(e))}))&&((n=t.target.parentElement.children,function(t){if(Array.isArray(t))return e(t)}(n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(e){e!==t.target&&e.classList.remove("open")})),t.target.classList.toggle("open"))})),document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".life__slider"),t=document.querySelectorAll(".life__slide"),n=document.querySelector(".life__arrow_prev"),r=document.querySelector(".life__arrow_next"),o=document.querySelector(".life__pagination"),a=0,c=0,i=!1;t.forEach((function(e,t){var n=document.createElement("div");n.classList.add("life__bar"),0===t&&n.classList.add("active"),n.dataset.index=t,o.appendChild(n)}));var l=document.querySelectorAll(".life__bar");function s(t){e.style.transition="transform 0.5s ease-in-out",e.style.transform="translateX(-".concat(100*t,"%)"),l.forEach((function(e){return e.classList.remove("active")})),l[t].classList.add("active")}function d(){s(a=(a+1)%t.length)}function u(){s(a=(a-1+t.length)%t.length)}r.addEventListener("click",d),n.addEventListener("click",u),l.forEach((function(e){e.addEventListener("click",(function(){s(a=Number(e.dataset.index))}))})),e.addEventListener("touchstart",(function(t){c=t.touches[0].clientX,i=!0,e.style.transition="none"})),e.addEventListener("touchmove",(function(t){if(i){var n=t.touches[0].clientX,r=c-n;e.style.transform="translateX(calc(-".concat(100*a,"% - ").concat(r,"px))")}})),e.addEventListener("touchend",(function(e){if(i){i=!1;var t=e.changedTouches[0].clientX,n=c-t;n>50?d():n<-50?u():s(a)}}))})),document.addEventListener("DOMContentLoaded",(function(){n();var e=document.querySelectorAll("[data-region]"),t=document.querySelectorAll("[data-city]");function n(){var n;null==e||e.forEach((function(e){return e.classList.remove("active")})),null==t||t.forEach((function(e){return e.classList.remove("active")})),document.querySelector('[data-region="all"]').classList.add("active"),document.querySelectorAll(".map [data-city]").forEach((function(e){return e.classList.add("active")})),console.log("set all",null===(n=document.querySelectorAll(".map [data-city]"))||void 0===n?void 0:n.length)}document.addEventListener("click",(function(r){var o,a=r.target,c=null,i=null;a.matches(".offices__region")?c=a.closest("[data-region]").getAttribute("data-region"):a.matches("[data-region]")?c=a.getAttribute("data-region"):a.matches("[data-city]")&&(i=a.getAttribute("data-city")),"all"!==c?(c&&e.forEach((function(e){e.getAttribute("data-region")===c?e.classList.add("active"):e.classList.remove("active")})),i&&(t.forEach((function(e){e.getAttribute("data-city")===i?e.classList.add("active"):e.classList.remove("active")})),null===(o=document.querySelector(".offices__toggle"))||void 0===o||o.classList.remove("open"))):n()}))})),document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelectorAll(".fade-in, .slide-in-left, .slide-in-right"),t=new IntersectionObserver((function(e){e.forEach((function(e){e.isIntersecting&&(e.target.classList.add("visible"),t.unobserve(e.target))}))}),{threshold:.2});e.forEach((function(e){return t.observe(e)}))}))})();